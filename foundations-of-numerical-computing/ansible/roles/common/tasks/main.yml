---
- name: Add CertBot APT Repository
  tags: apt
  apt_repository:
    repo: "ppa:certbot/certbot"
    state: present
  become: yes

- name: Install APT Dependencies
  tags: apt
  apt: name={{ item }} update_cache=yes state=present
  with_items:
    - git
    - libffi-dev
    - libssl-dev
    - nodejs-legacy
    - npm
    - python3-dev
    - python3-pip
    - python3-venv
    - supervisor
    - certbot
    - emacs24
  become: yes

- name: Install foo
  tags: npm
  npm:
    global: yes
    production: yes
    name: "configurable-http-proxy"
    version: 2.0.4
  become: yes

- name: Create LetsEncrypt Certificate
  tags: cert
  shell: |
    certbot certonly --standalone -m {{ ssl_cert_email }} -d {{ ssl_cert_domain }} --agree-tos -n
  become: yes

- name: Create JupyterHub src directory.
  tags: hub
  file:
    path: "{{ jupyterhub_source_directory }}"
    state: directory
    mode: "u=rwx,g=r,o=r"
  become: yes

- name: Copy jupyterhub_config.py.
  tags: hub
  copy:
    src: files/jupyterhub_config.py
    dest: "{{ jupyterhub_config }}"
  become: yes

- name: Copy requirements.txt.
  tags: hub
  copy:
    src: files/requirements.txt
    dest: "{{ jupyterhub_requirements }}"
  become: yes
  become_user: root

- name: Create tutorial directory.
  tags: materials
  file:
    path: "{{ tutorial_root }}"
    state: directory
    mode: "u=rwx,g=rwx,o=rwx"
  become: yes

- name: Create workspace directory
  tags: materials
  file:
    path: "{{ tutorial_workspace }}"
    state: directory
    # Anyone can write in the workspace.
    mode: "u=rwx,g=rwx,o=rwx"
  become: yes

- name: Copy tutorial materials.
  tags: materials
  copy:
    src: "{{ item }}"
    dest: "{{ tutorial_materials }}"
    mode: "u=rwx,g=rwx,o=rwx"
  with_fileglob:
    - "files/materials/*"
  become: yes

- name: Copy tutorial materials images.
  tags: materials
  copy:
    src: "{{ item }}"
    dest: "{{ tutorial_materials }}/images/"
    mode: "u=rwx,g=rwx,o=rwx"
  with_fileglob:
    - "files/materials/images/*"
  become: yes

- name: Install Python Packages
  tags: hub
  shell: python3 -m pip install -r {{ jupyterhub_requirements }}
  become: yes

- name: Create Hub Service
  tags:
    - hub
    - supervisor
  template:
    src: supervisor.conf.j2
    dest: "{{ jupyterhub_supervisor_config }}"
    owner: root
    mode: 640
  become: yes
  notify: start supervisord

- name: Create Docker Build Directory
  tags:
    - docker
    - docker-build
  file:
    path: /build
    state: directory
    owner: root
    mode: 744
  become: yes

- name: Create Dockerfile
  tags:
    - docker
    - docker-build
  template:
    src: Dockerfile.j2
    dest: /build/Dockerfile
    owner: root
    mode: 600
  become: yes

- name: Copy docker requirements.
  tags:
    - docker
    - docker-build
  copy:
    src: container_requirements.txt
    dest: /build/requirements.txt
    mode: "u=rw,g=r,o=r"
  become: yes

- name: Build Docker Image
  tags:
    - docker
    - docker-build
  docker_image:
    path: /build
    name: "{{ singleuser_docker_image }}"
    force: yes
  become: yes

- name: Start SupervisorD
  command: /bin/true
  notify: start supervisord
  tags: restart

- name: Start JupyterHub
  command: /bin/true
  notify: start jupyterhub
  tags: restart
